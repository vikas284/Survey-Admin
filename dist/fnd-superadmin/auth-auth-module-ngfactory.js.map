{"version":3,"sources":["./src/app/auth/components/login/login.component.html","./src/app/shared/components/loader/loader.component.ts","./src/app/shared/components/alert/alert.component.html","./src/app/shared/components/alert/alert.component.ts","./src/app/auth/components/login/login.component.ts","./src/app/auth/auth.module.ts","./src/app/auth/services/index.ts","./src/app/auth/components/auth.component.ts","./src/app/auth/components/auth.component.html","./src/app/auth/services/authentication.service.ts","./src/app/shared/components/loader/loader.component.html"],"names":[],"mappings":"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","file":"auth-auth-module-ngfactory.js","sourcesContent":["<div class=\"row justify-content-center login\">\n    <div class=\"col-4\">\n        <div class=\"primary-bg\">\n            <div style=\"text-align: center;margin-bottom: 10px;\">\n                <img src=\"assets/logo-small.jpg\" style=\"width: 100px;height: 70px;\" />\n            </div>\n            <form>\n                <div>\n                    <label for=\"basic-url\">Email</label>\n                    <input type=\"text\" id=\"email\" class=\"form-control\" [(ngModel)]=\"email\" name=\"email\" placeholder=\"Email\">\n                </div>\n                <div style=\"margin-top:10px;\">\n                    <label for=\"password\">Password</label>\n                    <input type=\"password\" id=\"password\" class=\"form-control\" [(ngModel)]=\"password\" name=\"password\" placeholder=\"Password\">\n                </div>\n                <div style=\"text-align: center;margin-top:20px;\">\n                    <button class=\"btn btn-info\" [disabled]=\"!email || !password\" (click)=\"login()\">Login</button>\n                </div>\n            </form>\n\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport {SharedService, LoaderService } from '../../services';\n@Component({\n\tselector: 'ch-loader',\n\ttemplateUrl: './loader.component.html',\n\tstyleUrls: ['./loader.component.css']\n})\nexport class LoaderComponent implements OnInit {\n\tshowLoader: boolean;\n\tconstructor(\n\t\tprivate sharedService: SharedService,\n\t\tprivate loaderService: LoaderService\n\t\t) { }\n\n\tngOnInit() {\n\t\tthis.loaderService.status.subscribe((val: boolean) => {\n            this.showLoader = val;\n        });\n\t}\n\n}\n","<div *ngIf=\"message\" class=\"alert-message alert-ok\" [ngClass]=\"{ 'alert-message': message, 'alert-ok': message.type === 'success', 'alert-failure': message.type === 'error', 'alert-warning': message.type === 'warning', 'alert-information': message.type === 'information'}\">\n\t<div class=\"row\">\n\t\t<div class=\"col-md-1\">\n\t\t\t<i aria-hidden=\"true\" [ngClass]=\"{ 'fa': message, 'fa-thumbs-up': message.type === 'success', 'fa-exclamation-circle': message.type === 'error', 'fa-exclamation-triangle': message.type === 'warning', 'fa-info-circle': message.type === 'information'}\"></i>\t\t\n\t\t</div>\n\t\t<div class=\"col-md-10\">\n\t\t\t<h5>\n\t\t\t\t<span *ngIf= \"message.type === 'success'\">Success.</span>\n\t\t\t\t<span *ngIf= \"message.type === 'error'\">Error.</span>\n\t\t\t</h5>\n\t\t\t<p>{{message.text}} </p>\n\t\t</div>\n\t</div>\n\n</div>\n","import { Component, OnDestroy } from '@angular/core';\nimport { AlertService } from '../../services/index';\n\n@Component({\n    selector: 'alert',\n    templateUrl: 'alert.component.html'\n})\n\nexport class AlertComponent {\n    message: any;\n\n    constructor(private alertService: AlertService) {\n        alertService.getMessage().subscribe(message => {\n            this.message = message;\n            setTimeout(function () {\n                this.message = false;\n            }.bind(this), 10000);\n        });\n    }\n\n}","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthenticationService } from '../../services';\nimport { SharedService, LoaderService, AlertService } from '../../../shared/services';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: 'login.component.html'\n})\n\nexport class LoginComponent implements OnInit {\n    email: string;\n    password: string;\n\n    constructor(\n        private SharedService: SharedService,\n        private route: ActivatedRoute,\n        private router: Router,\n        private authService: AuthenticationService,\n        private alertService: AlertService,\n        private loaderService: LoaderService,\n    ) {\n\n    }\n\n    ngOnInit() {\n\n    }\n\n    login() {\n        let loginObject = {\n            email: this.email,\n            password: this.password\n        }\n        this.loaderService.display(true);\n        this.authService.login(loginObject).subscribe((userData) => {\n            this.loaderService.display(false);\n            localStorage.setItem('currentUser', JSON.stringify(userData));\n            this.router.navigate(['admin/user']);\n        }, (err) => {\n            this.loaderService.display(false);\n            this.alertService.error(err.error.message, true);\n        })\n    }\n\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { authRouting } from './auth.routing';\nimport { SharedModule } from '../shared/shared.module';\n\nimport { AuthComponent, LoginComponent } from './components/index';\n\nimport { AuthenticationService } from './services';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tauthRouting,\n\t\tHttpClientModule,\n\t\tFormsModule,\n\t\tReactiveFormsModule,\n\t\tSharedModule\n\t],\n\tdeclarations: [\n\t\tAuthComponent,\n\t\tLoginComponent\n\t],\n\tproviders: [\n\t\tAuthenticationService\n\t]\n})\nexport class AuthModule { }\n","export * from './authentication.service';","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.css']\n})\nexport class AuthComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<alert></alert>\n<ch-loader></ch-loader>\n<div class=\"container-fluid main-container fill\">\n    <div class=\"row fill\">\n        <div class=\"col-12 fill\">\n            <router-outlet>\n            </router-outlet>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { SharedService } from '../../shared/services';\n\n@Injectable()\nexport class AuthenticationService {\n    API_ENDPOINT: string;\n    constructor(private http: HttpClient,\n        private sharedService: SharedService) {\n        this.API_ENDPOINT = this.sharedService.getApiEndPoint();\n    }\n\n    login(loginData) {\n        return this.http.post(this.API_ENDPOINT + '/user/login', loginData);\n    }\n\n}","<div class=\"bootstrap-loader\" *ngIf=\"showLoader\"> </div>"],"sourceRoot":"webpack:///"}